pub mod client;
pub mod inputtable;
pub mod menu;

const LOGO: &str = r#"
|.============[_F_E_D_E_R_A_L___R_E_S_E_R_V_E___N_O_T_E_]============.|
 ||%&%&%&%_    _        _ _ _   _ _  _ _ _     _       _    _ %&%&%&%&||
 ||%&%&%&/||_||_ | ||\||||_| \ (_ ||\||_(_  /\|_ |\|V||_|)|/ |\ \%&%&%||
 ||&%.--.}|| ||_ \_/| ||||_|_/ ,_)|||||_,_) \/|  ||| ||_|\|\_||{.--.%&||
 ||%/__ _\                ,-----,-'____'-,-----,               /__ _\ ||
 ||||_ / \|              [    .-;"`___ `";-.    ]             ||_ / \|||
 |||  \| || """""""""" 1  `).'.'.'`_ _'.  '.'.(` A 76355942 J |  \| ||||
 |||,_/\_/|                //  / .'    '\    \\               |,_/\_/|||
 ||%\    /   d8888b       //  | /   _  _ |    \\      .-"""-.  \    /%||
 ||&%&--'   8P |) Y8     ||   //;   a \a \     ||    //A`Y A\\  '--'%&||
 ||%&%&|    8b |) d8     ||   \\ '.   _> .|    ||    ||.-'-.||   |&%&%||
 ||%&%&|     Y8888P      ||    `|  `-'_ ` |    ||    \\_/~\_//   |&%&%||
 ||%%%%|                 ||     ;'.  ' ` /     ||     '-...-'    |%&%&||
 ||%&%&|  A 76355942 J  /;\  _.-'. `-..'`>-._  /;\               |%&%&||
 ||&%.--.              (,  ':     \; >-'`    ;` ,)              .--.%&||
 ||%( 50 ) 1  """""""  _( \  ;...---""---...; / )_```"""""""1  ( 50 )%||
 ||&%'--'============\`----------,----------------`/============'--'%&||
 ||%&JGS&%&%&%&%&&%&%&) F I F T Y   D O L L A R S (%&%&%&%&%&%&&%&%&%&||
 '"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""`
 "#;

const BANK_CLI_STR: &str = r#"
  ____    _    _   _ _  __      ____ _     ___ 
 | __ )  / \  | \ | | |/ /     / ___| |   |_ _|
 |  _ \ / _ \ |  \| | ' /_____| |   | |    | | 
 | |_) / ___ \| |\  | . \_____| |___| |___ | | 
 |____/_/   \_\_| \_|_|\_\     \____|_____|___|
 "#;

 use l1::common::user::UserType;

use menu::*;

fn main() {
    print!("{}", LOGO);
    print!("{}\n", BANK_CLI_STR);

    let mut client = client::Client::new();
    loop {
        {
            let mut auth_menu = client.auth_menu();
            let _ = auth_menu.exec();
        }
        if client.user_type().is_some() {
            break;
        }
    }


    let mut user_menu = match client.user_type().unwrap() {
        UserType::Client => client.client_menu(),
        UserType::Manager => client.manager_menu(),
        _ => unimplemented!()
    };
    loop {
        let _ = user_menu.exec();
    }

}
